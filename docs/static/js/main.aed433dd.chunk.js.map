{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","console","log","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BC,QAAQC,IAAI,gBACZV,GAAe,SAAAW,GAAQ,OAAKT,GAAL,mBAAoBS,OAC3CR,EAAc,MAMlB,SACI,uBACIS,KAAO,OACPC,MAAUX,EACVY,SApBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,a,uBCNlBG,EAAO,uCAAG,WAAML,GAAN,uBAAAM,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUR,GAF7C,+DAGAS,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IAIzB,OACI,sBAAKM,UAAY,yCAAjB,UACI,qBAAKC,IAAKP,EAAIR,IAAKgB,IAAKR,EAAIE,QAC5B,4BAAIF,EAAIE,YCNPO,EAAU,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAErB,ECFwB,SAACA,GAEzB,MAA0BV,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WAENvB,EAAQL,GACH6B,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACnBf,KAAMkB,EACNL,SAAS,SAGlB,CAACzB,IAEG0B,EDfwBK,CAAa/B,GAAhCkB,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDrB,IAElDyB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAY,YAAjB,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,CAEQA,IAAOA,GADAA,EAAIC,aEuBxBgB,EApCM,WAEjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,qCAEI,8CAEA,cAAC,EAAD,CAAaA,cAAkBA,IAE/B,uBAIA,6BAEQ4C,EAAWnB,KAAK,SAAAd,GACZ,OAAO,cAAC,EAAD,CAEKA,SAAYA,GADLA,YCjBrCkC,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAQ,cAAC,EAAD,IAAmBJ,K","file":"static/js/main.aed433dd.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value); //obtienes el valor del campo y puedes escribir dentro del input\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); //para no recargar la pÃ¡gina al enviar el form\n\n        if( inputValue.trim().length > 0 ){\n            console.log('submit hecho');\n            setCategories( category => [inputValue, ...category] );\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit = { handleSubmit }>\n            <input \n                type = \"text\"\n                value = { inputValue } \n                onChange = { handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async(category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=kGl8UU75V5KZBPugRNjyYwVZ1cMv1Sf4`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n}\n\n\n\n","import React from 'react'\n\nexport const GifGridItem = ({img}) => {\n\n    // console.log(img);\n\n    return (\n        <div className = \"card animate__animated animate__fadeIn\" >\n            <img src={img.url} alt={img.title} />\n            <p>{img.title}</p>\n        </div>\n    )\n}\n","import { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            \n            {loading && <p className=\"animate__animated animate__flash\">loading</p> }\n\n            <div className = \"card-grid\" >\n\n                {\n                    images.map( img => (\n                    <GifGridItem\n                            key = {img.id} \n                            img = {img} \n                            // {...img}\n                        />\n                    ))    \n                }\n            \n            </div>\n        </>\n    )\n}\n","import {useState, useEffect} from 'react';\nimport {getGifs} from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) =>{\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => setState({\n                data: imgs,\n                loading: false\n            }));\n\n    }, [category]);\n\n    return state;\n\n}\n\n\n\n","\nimport React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    \n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     setCategories( [...categories, 'HunterXHunter'] );\n    //     setCategories( category => [...category, inputValue] );\n    // }\n\n    return (\n        <>\n\n            <h2>GifExpertApp</h2>\n\n            <AddCategory setCategories = { setCategories } />\n\n            <hr />\n\n            {/* <button onClick={handleAdd} >Agregar</button> */}\n\n            <ol>\n                { \n                    categories.map( category => {\n                        return <GifGrid\n                                    key = {category}  \n                                    category = {category} \n                                />\n                    }) \n                }\n            </ol>\n\n        </>\n    )\n\n}\n\nexport default GifExpertApp;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n// ReactDOM.render(\n\n//     <App />,\n//     document.getElementById('root')\n// );\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render( <GifExpertApp /> , divRoot );\n"],"sourceRoot":""}